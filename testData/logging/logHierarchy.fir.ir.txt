FILE fqName:<root> fileName:/logHierarchy.kt
  CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]
    annotations:
      StateLogging
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A
    CONSTRUCTOR visibility:public <> () returnType:<root>.A [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]'
    PROPERTY GENERATED[LoggerFieldGeneratorKey] name:logger visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]
        EXPRESSION_BODY
          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in org.itmo.logging.plugin.Logger' type=org.itmo.logging.plugin.Logger origin=null
      FUN GENERATED[LoggerFieldGeneratorKey] name:<get-logger> visibility:public modality:FINAL <> ($this:<root>.A) returnType:org.itmo.logging.plugin.Logger
        correspondingProperty: PROPERTY GENERATED[LoggerFieldGeneratorKey] name:logger visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.A
        BLOCK_BODY
          RETURN type=org.itmo.logging.plugin.Logger from='public final fun <get-logger> (): org.itmo.logging.plugin.Logger declared in <root>.A'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY
              receiver: GET_VAR '<this>: <root>.A declared in <root>.A.<get-logger>' type=<root>.A origin=null
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  CLASS CLASS name:B modality:FINAL visibility:public superTypes:[<root>.A]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.B
    CONSTRUCTOR visibility:public <> () returnType:<root>.B [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.A'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:B modality:FINAL visibility:public superTypes:[<root>.A]'
    PROPERTY name:x visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:private [final]
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=47
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-x> visibility:private modality:FINAL <> ($this:<root>.B) returnType:kotlin.Int
        correspondingProperty: PROPERTY name:x visibility:private modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-x> (): kotlin.Int declared in <root>.B'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:x type:kotlin.Int visibility:private [final]' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.B declared in <root>.B.<get-x>' type=<root>.B origin=null
    PROPERTY name:z visibility:private modality:FINAL [var]
      FIELD PROPERTY_BACKING_FIELD name:z type:kotlin.Int visibility:private
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value=42
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-z> visibility:private modality:FINAL <> ($this:<root>.B) returnType:kotlin.Int
        correspondingProperty: PROPERTY name:z visibility:private modality:FINAL [var]
        $this: VALUE_PARAMETER name:<this> type:<root>.B
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-z> (): kotlin.Int declared in <root>.B'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z type:kotlin.Int visibility:private' type=kotlin.Int origin=null
              receiver: GET_VAR '<this>: <root>.B declared in <root>.B.<get-z>' type=<root>.B origin=null
      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-z> visibility:private modality:FINAL <> ($this:<root>.B, <set-?>:kotlin.Int) returnType:kotlin.Unit
        correspondingProperty: PROPERTY name:z visibility:private modality:FINAL [var]
        $this: VALUE_PARAMETER name:<this> type:<root>.B
        VALUE_PARAMETER name:<set-?> index:0 type:kotlin.Int
        BLOCK_BODY
          SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:z type:kotlin.Int visibility:private' type=kotlin.Unit origin=null
            receiver: GET_VAR '<this>: <root>.B declared in <root>.B.<set-z>' type=<root>.B origin=null
            value: GET_VAR '<set-?>: kotlin.Int declared in <root>.B.<set-z>' type=kotlin.Int origin=null
    FUN name:foo visibility:public modality:FINAL <> ($this:<root>.B, y:kotlin.Int) returnType:kotlin.Int
      annotations:
        ToLogFunction(logReturn = 'false')
      $this: VALUE_PARAMETER name:<this> type:<root>.B
      VALUE_PARAMETER name:y index:0 type:kotlin.Int
      BLOCK_BODY
        VAR BRIDGE name:$capturedThis type:<root>.B [val]
          GET_VAR '<this>: <root>.B declared in <root>.B.foo' type=<root>.B origin=null
        CALL 'public final fun logState (data: kotlin.String, level: kotlin.String): kotlin.Unit declared in org.itmo.logging.plugin.Logger' type=kotlin.Unit origin=null
          $this: CALL 'public final fun <get-logger> (): org.itmo.logging.plugin.Logger [fake_override] declared in <root>.B' superQualifier='CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY
            $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
          data: STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="--> foo()"
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="\tClass state:"
            CONST String type=kotlin.String value="\tx: kotlin.Int = "
            CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="\tz: kotlin.Int = "
            CALL 'private final fun <get-z> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="\tArguments:"
            CONST String type=kotlin.String value="\ty: kotlin.Int = "
            GET_VAR 'y: kotlin.Int declared in <root>.B.foo' type=kotlin.Int origin=null
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="------------------------------"
            CONST String type=kotlin.String value="
"
          level: CONST String type=kotlin.String value="BEFORE"
        RETURN type=kotlin.Nothing from='public final fun foo (y: kotlin.Int): kotlin.Int declared in <root>.B'
          CALL 'public final fun fullLogReturn (dataToLog: kotlin.String, level: kotlin.String, isShouldLogReturn: kotlin.Boolean, funcName: kotlin.String, value: kotlin.Any?): kotlin.Any? declared in org.itmo.logging.plugin.Logger' type=kotlin.Any? origin=null
            $this: CALL 'public final fun <get-logger> (): org.itmo.logging.plugin.Logger [fake_override] declared in <root>.B' superQualifier='CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
            dataToLog: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="|: foo()"
              CONST String type=kotlin.String value="
"
              CONST String type=kotlin.String value="\tClass state:"
              CONST String type=kotlin.String value="\tx: kotlin.Int = "
              CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="\tz: kotlin.Int = "
              CALL 'private final fun <get-z> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.foo' type=<root>.B origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="
"
              CONST String type=kotlin.String value="\tArguments:"
              CONST String type=kotlin.String value="\ty: kotlin.Int = "
              GET_VAR 'y: kotlin.Int declared in <root>.B.foo' type=kotlin.Int origin=null
              CONST String type=kotlin.String value="
"
              CONST String type=kotlin.String value="------------------------------"
              CONST String type=kotlin.String value="
"
            level: CONST String type=kotlin.String value="AFTER"
            isShouldLogReturn: CONST Boolean type=kotlin.Boolean value=false
            funcName: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="\t^foo()"
            value: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PLUS
              $this: CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR '<this>: <root>.B declared in <root>.B.foo' type=<root>.B origin=null
              other: GET_VAR 'y: kotlin.Int declared in <root>.B.foo' type=kotlin.Int origin=null
    FUN name:bar visibility:public modality:FINAL <> ($this:<root>.B, s:kotlin.String) returnType:kotlin.Int
      annotations:
        ToLogFunction(logReturn = 'true')
      $this: VALUE_PARAMETER name:<this> type:<root>.B
      VALUE_PARAMETER name:s index:0 type:kotlin.String
      BLOCK_BODY
        VAR BRIDGE name:$capturedThis type:<root>.B [val]
          GET_VAR '<this>: <root>.B declared in <root>.B.bar' type=<root>.B origin=null
        CALL 'public final fun logState (data: kotlin.String, level: kotlin.String): kotlin.Unit declared in org.itmo.logging.plugin.Logger' type=kotlin.Unit origin=null
          $this: CALL 'public final fun <get-logger> (): org.itmo.logging.plugin.Logger [fake_override] declared in <root>.B' superQualifier='CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY
            $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
          data: STRING_CONCATENATION type=kotlin.String
            CONST String type=kotlin.String value="--> bar()"
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="\tClass state:"
            CONST String type=kotlin.String value="\tx: kotlin.Int = "
            CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="\tz: kotlin.Int = "
            CALL 'private final fun <get-z> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
            CONST String type=kotlin.String value=", "
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="\tArguments:"
            CONST String type=kotlin.String value="\ts: kotlin.String = "
            GET_VAR 's: kotlin.String declared in <root>.B.bar' type=kotlin.String origin=null
            CONST String type=kotlin.String value="
"
            CONST String type=kotlin.String value="------------------------------"
            CONST String type=kotlin.String value="
"
          level: CONST String type=kotlin.String value="BEFORE"
        CALL 'private final fun <set-z> (<set-?>: kotlin.Int): kotlin.Unit declared in <root>.B' type=kotlin.Unit origin=EQ
          $this: GET_VAR '<this>: <root>.B declared in <root>.B.bar' type=<root>.B origin=null
          <set-?>: CALL 'public open fun <get-length> (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
            $this: GET_VAR 's: kotlin.String declared in <root>.B.bar' type=kotlin.String origin=null
        RETURN type=kotlin.Nothing from='public final fun bar (s: kotlin.String): kotlin.Int declared in <root>.B'
          CALL 'public final fun fullLogReturn (dataToLog: kotlin.String, level: kotlin.String, isShouldLogReturn: kotlin.Boolean, funcName: kotlin.String, value: kotlin.Any?): kotlin.Any? declared in org.itmo.logging.plugin.Logger' type=kotlin.Any? origin=null
            $this: CALL 'public final fun <get-logger> (): org.itmo.logging.plugin.Logger [fake_override] declared in <root>.B' superQualifier='CLASS CLASS name:A modality:OPEN visibility:public superTypes:[kotlin.Any]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY
              $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
            dataToLog: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="|: bar()"
              CONST String type=kotlin.String value="
"
              CONST String type=kotlin.String value="\tClass state:"
              CONST String type=kotlin.String value="\tx: kotlin.Int = "
              CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="\tz: kotlin.Int = "
              CALL 'private final fun <get-z> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 'val $capturedThis: <root>.B [val] declared in <root>.B.bar' type=<root>.B origin=null
              CONST String type=kotlin.String value=", "
              CONST String type=kotlin.String value="
"
              CONST String type=kotlin.String value="\tArguments:"
              CONST String type=kotlin.String value="\ts: kotlin.String = "
              GET_VAR 's: kotlin.String declared in <root>.B.bar' type=kotlin.String origin=null
            level: CONST String type=kotlin.String value="AFTER"
            isShouldLogReturn: CONST Boolean type=kotlin.Boolean value=true
            funcName: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="\t^bar()"
            value: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PLUS
              $this: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PLUS
                $this: CALL 'private final fun <get-x> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.B declared in <root>.B.bar' type=<root>.B origin=null
                other: CALL 'private final fun <get-z> (): kotlin.Int declared in <root>.B' type=kotlin.Int origin=GET_PROPERTY
                  $this: GET_VAR '<this>: <root>.B declared in <root>.B.bar' type=<root>.B origin=null
              other: CALL 'public open fun <get-length> (): kotlin.Int declared in kotlin.String' type=kotlin.Int origin=GET_PROPERTY
                $this: GET_VAR 's: kotlin.String declared in <root>.B.bar' type=kotlin.String origin=null
    PROPERTY FAKE_OVERRIDE name:logger visibility:public modality:FINAL [fake_override,val]
      overridden:
        public final logger: org.itmo.logging.plugin.Logger [val]
      FUN FAKE_OVERRIDE name:<get-logger> visibility:public modality:FINAL <> ($this:<root>.A) returnType:org.itmo.logging.plugin.Logger [fake_override]
        correspondingProperty: PROPERTY FAKE_OVERRIDE name:logger visibility:public modality:FINAL [fake_override,val]
        overridden:
          public final fun <get-logger> (): org.itmo.logging.plugin.Logger declared in <root>.A
        $this: VALUE_PARAMETER name:<this> type:<root>.A
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean [fake_override,operator] declared in <root>.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int [fake_override] declared in <root>.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String [fake_override] declared in <root>.A
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      VAR name:b type:<root>.B [val]
        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.B' type=<root>.B origin=null
      VAR name:result type:kotlin.Int [val]
        CALL 'public final fun foo (y: kotlin.Int): kotlin.Int declared in <root>.B' type=kotlin.Int origin=null
          $this: GET_VAR 'val b: <root>.B [val] declared in <root>.box' type=<root>.B origin=null
          y: CONST Int type=kotlin.Int value=13
      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit
        CALL 'public final fun bar (s: kotlin.String): kotlin.Int declared in <root>.B' type=kotlin.Int origin=null
          $this: GET_VAR 'val b: <root>.B [val] declared in <root>.box' type=<root>.B origin=null
          s: CONST String type=kotlin.String value="Kotlin is cool"
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        WHEN type=kotlin.String origin=IF
          BRANCH
            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ
              arg0: GET_VAR 'val result: kotlin.Int [val] declared in <root>.box' type=kotlin.Int origin=null
              arg1: CONST Int type=kotlin.Int value=60
            then: CONST String type=kotlin.String value="OK"
          BRANCH
            if: CONST Boolean type=kotlin.Boolean value=true
            then: STRING_CONCATENATION type=kotlin.String
              CONST String type=kotlin.String value="Fail: "
              GET_VAR 'val result: kotlin.Int [val] declared in <root>.box' type=kotlin.Int origin=null

