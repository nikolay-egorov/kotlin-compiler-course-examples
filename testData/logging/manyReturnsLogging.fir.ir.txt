FILE fqName:<root> fileName:/manyReturnsLogging.kt  CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]    annotations:      StateLogging    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.A    CONSTRUCTOR visibility:public <> () returnType:<root>.A [primary]      BLOCK_BODY        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in kotlin.Any'        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:A modality:FINAL visibility:public superTypes:[kotlin.Any]'    PROPERTY name:myStorage visibility:private modality:FINAL [val]      FIELD PROPERTY_BACKING_FIELD name:myStorage type:kotlin.collections.MutableList<kotlin.Int> visibility:private [final]        EXPRESSION_BODY          CALL 'public final fun mutableListOf <T> (): kotlin.collections.MutableList<T of kotlin.collections.CollectionsKt.mutableListOf> [inline] declared in kotlin.collections.CollectionsKt' type=kotlin.collections.MutableList<kotlin.Int> origin=null            <T>: kotlin.Int      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-myStorage> visibility:private modality:FINAL <> ($this:<root>.A) returnType:kotlin.collections.MutableList<kotlin.Int>        correspondingProperty: PROPERTY name:myStorage visibility:private modality:FINAL [val]        $this: VALUE_PARAMETER name:<this> type:<root>.A        BLOCK_BODY          RETURN type=kotlin.Nothing from='private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A'            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:myStorage type:kotlin.collections.MutableList<kotlin.Int> visibility:private [final]' type=kotlin.collections.MutableList<kotlin.Int> origin=null              receiver: GET_VAR '<this>: <root>.A declared in <root>.A.<get-myStorage>' type=<root>.A origin=null    FUN name:oddAddition visibility:public modality:FINAL <> ($this:<root>.A, x:kotlin.Int) returnType:kotlin.String      annotations:        ToLogFunction(logReturn = 'true')      $this: VALUE_PARAMETER name:<this> type:<root>.A      VALUE_PARAMETER name:x index:0 type:kotlin.Int      BLOCK_BODY        VAR BRIDGE name:$capturedThis type:<root>.A [val]          GET_VAR '<this>: <root>.A declared in <root>.A.oddAddition' type=<root>.A origin=null        CALL 'public final fun logState (data: kotlin.String, level: kotlin.String): kotlin.Unit declared in org.itmo.logging.plugin.Logger' type=kotlin.Unit origin=null          $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]' type=org.itmo.logging.plugin.Logger origin=null            receiver: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null          data: STRING_CONCATENATION type=kotlin.String            CONST String type=kotlin.String value="--> oddAddition()"            CONST String type=kotlin.String value=""            CONST String type=kotlin.String value="\tClass state:"            CONST String type=kotlin.String value="\tmyStorage: kotlin.collections.MutableList = "            CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY              $this: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null            CONST String type=kotlin.String value=", "            CONST String type=kotlin.String value=""            CONST String type=kotlin.String value="\tArguments:"            CONST String type=kotlin.String value="\tx: kotlin.Int = "            GET_VAR 'x: kotlin.Int declared in <root>.A.oddAddition' type=kotlin.Int origin=null            CONST String type=kotlin.String value=""            CONST String type=kotlin.String value="------------------------------"            CONST String type=kotlin.String value=""          level: CONST String type=kotlin.String value="BEFORE"        WHEN type=kotlin.Nothing origin=IF          BRANCH            if: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EQEQ              arg0: CALL 'public final fun rem (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PERC                $this: CALL 'public final fun plus (other: kotlin.Int): kotlin.Int [operator] declared in kotlin.Int' type=kotlin.Int origin=PLUS                  $this: CALL 'public abstract fun <get-size> (): kotlin.Int [fake_override] declared in kotlin.collections.MutableList' type=kotlin.Int origin=GET_PROPERTY                    $this: CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY                      $this: GET_VAR '<this>: <root>.A declared in <root>.A.oddAddition' type=<root>.A origin=null                  other: GET_VAR 'x: kotlin.Int declared in <root>.A.oddAddition' type=kotlin.Int origin=null                other: CONST Int type=kotlin.Int value=2              arg1: CONST Int type=kotlin.Int value=0            then: RETURN type=kotlin.Nothing from='public final fun oddAddition (x: kotlin.Int): kotlin.String declared in <root>.A'              CALL 'public final fun fullLogReturn (dataToLog: kotlin.String, level: kotlin.String, isShouldLogReturn: kotlin.Boolean, funcName: kotlin.String, value: kotlin.Any?): kotlin.Any? declared in org.itmo.logging.plugin.Logger' type=kotlin.Any? origin=null                $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]' type=org.itmo.logging.plugin.Logger origin=null                  receiver: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null                dataToLog: STRING_CONCATENATION type=kotlin.String                  CONST String type=kotlin.String value="|: oddAddition()"                  CONST String type=kotlin.String value=""                  CONST String type=kotlin.String value="\tClass state:"                  CONST String type=kotlin.String value="\tmyStorage: kotlin.collections.MutableList = "                  CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY                    $this: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null                  CONST String type=kotlin.String value=", "                  CONST String type=kotlin.String value=""                  CONST String type=kotlin.String value="\tArguments:"                  CONST String type=kotlin.String value="\tx: kotlin.Int = "                  GET_VAR 'x: kotlin.Int declared in <root>.A.oddAddition' type=kotlin.Int origin=null                level: CONST String type=kotlin.String value="AFTER"                isShouldLogReturn: CONST Boolean type=kotlin.Boolean value=true                funcName: STRING_CONCATENATION type=kotlin.String                  CONST String type=kotlin.String value="\t^oddAddition()"                value: CONST String type=kotlin.String value="EVEN!"          BRANCH            if: CONST Boolean type=kotlin.Boolean value=true            then: BLOCK type=kotlin.Nothing origin=null              TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit                CALL 'public abstract fun add (element: E of kotlin.collections.MutableList): kotlin.Boolean declared in kotlin.collections.MutableList' type=kotlin.Boolean origin=null                  $this: CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY                    $this: GET_VAR '<this>: <root>.A declared in <root>.A.oddAddition' type=<root>.A origin=null                  element: GET_VAR 'x: kotlin.Int declared in <root>.A.oddAddition' type=kotlin.Int origin=null              RETURN type=kotlin.Nothing from='public final fun oddAddition (x: kotlin.Int): kotlin.String declared in <root>.A'                CALL 'public final fun fullLogReturn (dataToLog: kotlin.String, level: kotlin.String, isShouldLogReturn: kotlin.Boolean, funcName: kotlin.String, value: kotlin.Any?): kotlin.Any? declared in org.itmo.logging.plugin.Logger' type=kotlin.Any? origin=null                  $this: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]' type=org.itmo.logging.plugin.Logger origin=null                    receiver: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null                  dataToLog: STRING_CONCATENATION type=kotlin.String                    CONST String type=kotlin.String value="|: oddAddition()"                    CONST String type=kotlin.String value=""                    CONST String type=kotlin.String value="\tClass state:"                    CONST String type=kotlin.String value="\tmyStorage: kotlin.collections.MutableList = "                    CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY                      $this: GET_VAR 'val $capturedThis: <root>.A [val] declared in <root>.A.oddAddition' type=<root>.A origin=null                    CONST String type=kotlin.String value=", "                    CONST String type=kotlin.String value=""                    CONST String type=kotlin.String value="\tArguments:"                    CONST String type=kotlin.String value="\tx: kotlin.Int = "                    GET_VAR 'x: kotlin.Int declared in <root>.A.oddAddition' type=kotlin.Int origin=null                  level: CONST String type=kotlin.String value="AFTER"                  isShouldLogReturn: CONST Boolean type=kotlin.Boolean value=true                  funcName: STRING_CONCATENATION type=kotlin.String                    CONST String type=kotlin.String value="\t^oddAddition()"                  value: CALL 'public open fun toString (): kotlin.String [fake_override] declared in kotlin.Int' type=kotlin.String origin=null                    $this: CALL 'public abstract fun <get-size> (): kotlin.Int [fake_override] declared in kotlin.collections.MutableList' type=kotlin.Int origin=GET_PROPERTY                      $this: CALL 'private final fun <get-myStorage> (): kotlin.collections.MutableList<kotlin.Int> declared in <root>.A' type=kotlin.collections.MutableList<kotlin.Int> origin=GET_PROPERTY                        $this: GET_VAR '<this>: <root>.A declared in <root>.A.oddAddition' type=<root>.A origin=null    PROPERTY GENERATED[LoggerFieldGeneratorKey] name:logger visibility:public modality:FINAL [val]      FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]        EXPRESSION_BODY          CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in org.itmo.logging.plugin.Logger' type=org.itmo.logging.plugin.Logger origin=null      FUN GENERATED[LoggerFieldGeneratorKey] name:<get-logger> visibility:public modality:FINAL <> ($this:<root>.A) returnType:org.itmo.logging.plugin.Logger        correspondingProperty: PROPERTY GENERATED[LoggerFieldGeneratorKey] name:logger visibility:public modality:FINAL [val]        $this: VALUE_PARAMETER name:<this> type:<root>.A        BLOCK_BODY          RETURN type=org.itmo.logging.plugin.Logger from='public final fun <get-logger> (): org.itmo.logging.plugin.Logger declared in <root>.A'            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:logger type:org.itmo.logging.plugin.Logger visibility:private [final]' type=org.itmo.logging.plugin.Logger origin=GET_PROPERTY              receiver: GET_VAR '<this>: <root>.A declared in <root>.A.<get-logger>' type=<root>.A origin=null    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]      overridden:        public open fun equals (other: kotlin.Any?): kotlin.Boolean [operator] declared in kotlin.Any      $this: VALUE_PARAMETER name:<this> type:kotlin.Any      VALUE_PARAMETER name:other index:0 type:kotlin.Any?    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]      overridden:        public open fun hashCode (): kotlin.Int declared in kotlin.Any      $this: VALUE_PARAMETER name:<this> type:kotlin.Any    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]      overridden:        public open fun toString (): kotlin.String declared in kotlin.Any      $this: VALUE_PARAMETER name:<this> type:kotlin.Any  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String    BLOCK_BODY      VAR name:a type:<root>.A [val]        CONSTRUCTOR_CALL 'public constructor <init> () [primary] declared in <root>.A' type=<root>.A origin=null      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit        CALL 'public final fun oddAddition (x: kotlin.Int): kotlin.String declared in <root>.A' type=kotlin.String origin=null          $this: GET_VAR 'val a: <root>.A [val] declared in <root>.box' type=<root>.A origin=null          x: CONST Int type=kotlin.Int value=12      TYPE_OP type=kotlin.Unit origin=IMPLICIT_COERCION_TO_UNIT typeOperand=kotlin.Unit        CALL 'public final fun oddAddition (x: kotlin.Int): kotlin.String declared in <root>.A' type=kotlin.String origin=null          $this: GET_VAR 'val a: <root>.A [val] declared in <root>.box' type=<root>.A origin=null          x: CONST Int type=kotlin.Int value=43      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'        CONST String type=kotlin.String value="OK"