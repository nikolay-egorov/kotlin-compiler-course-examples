

package ru.itmo.kotlin.plugin.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link GenerateNewCompilerTests.kt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
public class BoxTestGenerated extends AbstractBoxTest {
    @Nested
    @TestMetadata("testData/box")
    @TestDataPath("$PROJECT_ROOT")
    public class Box {
        @Test
        public void testAllFilesPresentInBox() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/box"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("simple.kt")
        public void testSimple() throws Exception {
            runTest("testData/box/simple.kt");
        }
    }

    @Nested
    @TestMetadata("testData/logging")
    @TestDataPath("$PROJECT_ROOT")
    public class Logging {
        @Test
        public void testAllFilesPresentInLogging() throws Exception {
            KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("testData/logging"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
        }

        @Test
        @TestMetadata("logHierarchy.kt")
        public void testLogHierarchy() throws Exception {
            runTest("testData/logging/logHierarchy.kt");
        }

        @Test
        @TestMetadata("logging.kt")
        public void testLogging() throws Exception {
            runTest("testData/logging/logging.kt");
        }

        @Test
        @TestMetadata("manyReturnsLogging.kt")
        public void testManyReturnsLogging() throws Exception {
            runTest("testData/logging/manyReturnsLogging.kt");
        }
    }
}
